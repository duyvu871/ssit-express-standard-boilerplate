version: '3.7'
services:
    postgres:
        image: postgres:14-alpine
        restart: unless-stopped
        ports:
            - '5432:5432'
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: 'redis:alpine'
        restart: unless-stopped
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        healthcheck:
            test: [ 'CMD', 'redis-cli', 'ping' ]
            interval: 10s
            timeout: 5s
            retries: 5

    server:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        ports:
            - '8000:8000'
        depends_on:
            - postgres
            - redis
        env_file:
            - .env
        volumes:
            - ./logs:/usr/src/app/logs

volumes:
    postgres_data:
    redis_data:
        # To rebuild a specific service:
        # docker-compose up -d --no-deps --build --no-cache <service_name>
